# Canary Deployment Configuration
# Classification: CRITICAL - PROGRESSIVE DEPLOYMENT
# Advanced canary release strategy with automated promotion/rollback
# Last Updated: 2025-08-08

# Canary Deployment with Istio Service Mesh
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: episodic-memory-canary
  namespace: orchestrix-pilot
  labels:
    app: episodic-memory
    deployment-strategy: canary
    component: application-service
spec:
  replicas: 5
  strategy:
    canary:
      # Canary deployment steps - progressive traffic shift
      steps:
      - setWeight: 5   # Start with 5% traffic
      - pause:
          duration: 300s  # Wait 5 minutes for initial metrics
      - analysis:
          templates:
          - templateName: canary-success-rate
          - templateName: canary-latency-p95
          args:
          - name: service-name
            value: episodic-memory-canary
          - name: namespace
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
      - setWeight: 25  # Increase to 25% traffic
      - pause:
          duration: 600s  # Wait 10 minutes
      - analysis:
          templates:
          - templateName: canary-success-rate
          - templateName: canary-latency-p95
          - templateName: canary-error-budget
          args:
          - name: service-name
            value: episodic-memory-canary
      - setWeight: 50  # Increase to 50% traffic
      - pause:
          duration: 900s  # Wait 15 minutes
      - analysis:
          templates:
          - templateName: canary-success-rate
          - templateName: canary-latency-p95
          - templateName: canary-error-budget
          - templateName: canary-user-satisfaction
          args:
          - name: service-name
            value: episodic-memory-canary
      - setWeight: 100 # Full traffic cutover
      
      # Traffic routing via Istio
      trafficRouting:
        istio:
          virtualService:
            name: episodic-memory-vsvc
            routes:
            - primary
          destinationRule:
            name: episodic-memory-dest-rule
            canarySubsetName: canary
            stableSubsetName: stable
      
      # Analysis configuration
      analysis:
        templates:
        - templateName: canary-success-rate
        - templateName: canary-latency-p95
        - templateName: canary-error-budget
        args:
        - name: service-name
          value: episodic-memory-canary
        - name: namespace
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        startingStep: 1
        successCondition: result[0].value >= 0.99 && result[1].value <= 1000
        failureCondition: result[0].value < 0.95 || result[1].value > 2000
        inconclusiveCondition: result[0].value >= 0.95 && result[0].value < 0.99
        interval: 60s
        count: 5
      
      # Automatic rollback conditions
      abortCondition:
        failureLimit: 2  # Abort after 2 failed analysis runs
        analysisRunMetadata:
          labels:
            canary-abort-reason: "analysis-failure"
          annotations:
            canary-abort-timestamp: "{{ .Analysis.FinishedAt }}"
      
      # Scale down delay for stable pods
      scaleDownDelaySeconds: 30
      dynamicStableScale: true
      
  selector:
    matchLabels:
      app: episodic-memory
  template:
    metadata:
      labels:
        app: episodic-memory
        version: canary
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8081"
        prometheus.io/path: "/metrics"
        sidecar.istio.io/inject: "true"
    spec:
      serviceAccountName: application-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 2000
      containers:
      - name: episodic-memory
        image: agentic/research-engine:latest
        imagePullPolicy: Always
        command: 
        - uvicorn
        - services.episodic_memory.app:app
        - --host=0.0.0.0
        - --port=8081
        - --workers=2
        ports:
        - containerPort: 8081
          name: http
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: DEPLOYMENT_TYPE
          value: "canary"
        - name: SERVICE_VERSION
          valueFrom:
            fieldRef:
              fieldPath: metadata.labels['version']
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://otel-collector:4317"
        - name: OTEL_SERVICE_NAME
          value: "episodic-memory-canary"
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: application-secrets
              key: redis-url
        - name: WEAVIATE_URL
          value: "http://weaviate:8080"
        - name: LOG_LEVEL
          value: "INFO"
        - name: ENABLE_TRACING
          value: "true"
        - name: ENABLE_METRICS
          value: "true"
        - name: CANARY_DEPLOYMENT
          value: "true"
        envFrom:
        - secretRef:
            name: application-secrets
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 2Gi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /health
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /ready
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 2
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /health
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 10
          successThreshold: 1
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-run
          mountPath: /var/run
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-run
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - episodic-memory
              topologyKey: kubernetes.io/hostname
---
# Canary Service
apiVersion: v1
kind: Service
metadata:
  name: episodic-memory-canary
  namespace: orchestrix-pilot
  labels:
    app: episodic-memory
    service-type: canary
spec:
  type: ClusterIP
  ports:
  - port: 8081
    targetPort: 8081
    protocol: TCP
    name: http
  selector:
    app: episodic-memory
---
# Istio Virtual Service for Traffic Management
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: episodic-memory-vsvc
  namespace: orchestrix-pilot
  labels:
    app: episodic-memory
    traffic-management: canary
spec:
  hosts:
  - episodic-memory
  http:
  - name: primary
    match:
    - headers:
        canary:
          exact: "true"
    route:
    - destination:
        host: episodic-memory
        subset: canary
      weight: 100
  - name: stable
    route:
    - destination:
        host: episodic-memory
        subset: stable
      weight: 100
    - destination:
        host: episodic-memory
        subset: canary
      weight: 0
    fault:
      abort:
        percentage:
          value: 0.1  # 0.1% abort rate for testing
        httpStatus: 503
      delay:
        percentage:
          value: 1.0  # 1% delay injection
        fixedDelay: 100ms
---
# Istio Destination Rule for Subset Definition
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: episodic-memory-dest-rule
  namespace: orchestrix-pilot
  labels:
    app: episodic-memory
    traffic-management: canary
spec:
  host: episodic-memory
  trafficPolicy:
    connectionPool:
      tcp:
        maxConnections: 100
      http:
        http1MaxPendingRequests: 64
        http2MaxRequests: 100
        maxRequestsPerConnection: 10
        maxRetries: 3
        consecutiveGatewayErrors: 3
        interval: 30s
        baseEjectionTime: 30s
        maxEjectionPercent: 50
    loadBalancer:
      simple: LEAST_CONN
    outlierDetection:
      consecutiveGatewayErrors: 3
      consecutive5xxErrors: 3
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
      minHealthPercent: 50
  subsets:
  - name: stable
    labels:
      version: stable
    trafficPolicy:
      connectionPool:
        tcp:
          maxConnections: 50
  - name: canary
    labels:
      version: canary
    trafficPolicy:
      connectionPool:
        tcp:
          maxConnections: 25
---
# AnalysisTemplate for Success Rate
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: canary-success-rate
  namespace: orchestrix-pilot
  labels:
    analysis-type: success-rate
spec:
  args:
  - name: service-name
  - name: namespace
  metrics:
  - name: success-rate
    interval: 60s
    count: 5
    successCondition: result[0] >= 0.99
    failureCondition: result[0] < 0.95
    provider:
      prometheus:
        address: http://prometheus:9090
        query: |
          sum(rate(http_requests_total{job="{{args.service-name}}", namespace="{{args.namespace}}", status!~"5.."}[5m])) / 
          sum(rate(http_requests_total{job="{{args.service-name}}", namespace="{{args.namespace}}"}[5m]))
---
# AnalysisTemplate for Latency P95
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: canary-latency-p95
  namespace: orchestrix-pilot
  labels:
    analysis-type: latency
spec:
  args:
  - name: service-name
  - name: namespace
  metrics:
  - name: latency-p95
    interval: 60s
    count: 5
    successCondition: result[0] <= 1.0
    failureCondition: result[0] > 2.0
    provider:
      prometheus:
        address: http://prometheus:9090
        query: |
          histogram_quantile(0.95, 
            sum(rate(http_request_duration_seconds_bucket{job="{{args.service-name}}", namespace="{{args.namespace}}"}[5m])) 
            by (le)
          )
---
# AnalysisTemplate for Error Budget
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: canary-error-budget
  namespace: orchestrix-pilot
  labels:
    analysis-type: error-budget
spec:
  args:
  - name: service-name
  - name: namespace
  metrics:
  - name: error-budget-consumption
    interval: 300s  # Check every 5 minutes
    count: 3
    successCondition: result[0] <= 0.5  # Less than 50% error budget consumed
    failureCondition: result[0] > 0.8   # More than 80% error budget consumed
    provider:
      prometheus:
        address: http://prometheus:9090
        query: |
          1 - (
            sum(rate(http_requests_total{job="{{args.service-name}}", namespace="{{args.namespace}}", status!~"5.."}[30m])) / 
            sum(rate(http_requests_total{job="{{args.service-name}}", namespace="{{args.namespace}}"}[30m]))
          ) / 0.999
---
# AnalysisTemplate for User Satisfaction
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: canary-user-satisfaction
  namespace: orchestrix-pilot
  labels:
    analysis-type: user-satisfaction
spec:
  args:
  - name: service-name
  - name: namespace
  metrics:
  - name: apdex-score
    interval: 300s
    count: 3
    successCondition: result[0] >= 0.8  # Apdex score above 0.8
    failureCondition: result[0] < 0.6   # Apdex score below 0.6
    provider:
      prometheus:
        address: http://prometheus:9090
        query: |
          (
            sum(rate(http_request_duration_seconds_bucket{job="{{args.service-name}}", namespace="{{args.namespace}}", le="0.5"}[5m])) +
            sum(rate(http_request_duration_seconds_bucket{job="{{args.service-name}}", namespace="{{args.namespace}}", le="2.0"}[5m])) / 2
          ) / sum(rate(http_request_duration_seconds_count{job="{{args.service-name}}", namespace="{{args.namespace}}"}[5m]))
---
# Canary Deployment Monitor
apiVersion: apps/v1
kind: Deployment
metadata:
  name: canary-monitor
  namespace: orchestrix-pilot
  labels:
    app: canary-monitor
    component: deployment-monitor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: canary-monitor
  template:
    metadata:
      labels:
        app: canary-monitor
        component: deployment-monitor
    spec:
      serviceAccountName: canary-monitor
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
      containers:
      - name: monitor
        image: agentic/canary-monitor:v1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: NAMESPACE
          value: "orchestrix-pilot"
        - name: PROMETHEUS_URL
          value: "http://prometheus:9090"
        - name: SLACK_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: notification-secrets
              key: slack-webhook-url
        - name: PAGERDUTY_INTEGRATION_KEY
          valueFrom:
            secretKeyRef:
              name: notification-secrets
              key: pagerduty-key
        - name: LOG_LEVEL
          value: "INFO"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 15
          periodSeconds: 5
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
---
# Service Account for Canary Monitor
apiVersion: v1
kind: ServiceAccount
metadata:
  name: canary-monitor
  namespace: orchestrix-pilot
  labels:
    component: canary-monitor
---
# ClusterRole for Canary Monitor
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: canary-monitor
rules:
- apiGroups: ["argoproj.io"]
  resources: ["rollouts", "analysisruns", "analysistemplates"]
  verbs: ["get", "list", "watch", "update", "patch"]
- apiGroups: [""]
  resources: ["events", "pods"]
  verbs: ["get", "list", "watch", "create"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["networking.istio.io"]
  resources: ["virtualservices", "destinationrules"]
  verbs: ["get", "list", "watch", "update", "patch"]
---
# ClusterRoleBinding for Canary Monitor
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: canary-monitor
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: canary-monitor
subjects:
- kind: ServiceAccount
  name: canary-monitor
  namespace: orchestrix-pilot
---
# Canary Configuration ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: canary-deployment-config
  namespace: orchestrix-pilot
  labels:
    component: canary-deployment
data:
  deployment-strategy: "canary"
  traffic-split-steps: "5,25,50,100"
  analysis-interval: "60s"
  promotion-threshold: "99%"
  rollback-threshold: "95%"
  max-analysis-runs: "5"
  canary-timeout: "30m"
  auto-promote: "false"  # Manual promotion required
  notification-enabled: "true"
  metrics-retention: "7d"
---
# ServiceMonitor for Canary Metrics
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: canary-deployment-metrics
  namespace: orchestrix-pilot
  labels:
    app: episodic-memory
    monitoring: prometheus
    deployment-type: canary
spec:
  selector:
    matchLabels:
      app: episodic-memory
  endpoints:
  - port: http
    path: /metrics
    interval: 15s
    scrapeTimeout: 10s
    relabelings:
    - sourceLabels: [__meta_kubernetes_pod_label_version]
      targetLabel: canary_version
    - sourceLabels: [__meta_kubernetes_pod_annotation_sidecar_istio_io_status]
      targetLabel: istio_proxy_status
---
# PodDisruptionBudget for Canary Deployment
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: episodic-memory-canary-pdb
  namespace: orchestrix-pilot
  labels:
    app: episodic-memory
    deployment-type: canary
spec:
  minAvailable: 80%
  selector:
    matchLabels:
      app: episodic-memory
---
# Network Policy for Canary Traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: canary-network-policy
  namespace: orchestrix-pilot
spec:
  podSelector:
    matchLabels:
      app: episodic-memory
      version: canary
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: istio-proxy
    - namespaceSelector:
        matchLabels:
          name: istio-system
    - podSelector:
        matchLabels:
          app: canary-monitor
    ports:
    - protocol: TCP
      port: 8081
    - protocol: TCP
      port: 15090  # Istio proxy admin
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: weaviate
    ports:
    - protocol: TCP
      port: 8080
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
  - to:
    - podSelector:
        matchLabels:
          app: otel-collector
    ports:
    - protocol: TCP
      port: 4317
  - to:
    - namespaceSelector:
        matchLabels:
          name: istio-system
    ports:
    - protocol: TCP
      port: 15000  # Istio control plane