# API Gateway Configuration for ORCHESTRIX Integration
# Classification: CRITICAL - API GATEWAY
# Last Updated: 2025-08-08

# NGINX Ingress Controller Configuration
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: orchestrix-api-gateway
  namespace: orchestrix-pilot
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/auth-type: oauth2
    nginx.ingress.kubernetes.io/auth-signin: "https://auth.orchestrix.ai/oauth2/start"
    nginx.ingress.kubernetes.io/auth-url: "https://auth.orchestrix.ai/oauth2/auth"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self'";
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - pilot-api.orchestrix.ai
    secretName: orchestrix-pilot-tls
  rules:
  - host: pilot-api.orchestrix.ai
    http:
      paths:
      - path: /api/v1/memory
        pathType: Prefix
        backend:
          service:
            name: episodic-memory
            port:
              number: 8081
      - path: /api/v1/reputation
        pathType: Prefix
        backend:
          service:
            name: reputation-service
            port:
              number: 8090
      - path: /api/v1/research
        pathType: Prefix
        backend:
          service:
            name: agent-manager
            port:
              number: 8000
---
# OAuth2 Proxy for Authentication
apiVersion: apps/v1
kind: Deployment
metadata:
  name: oauth2-proxy
  namespace: orchestrix-pilot
  labels:
    app: oauth2-proxy
spec:
  replicas: 2
  selector:
    matchLabels:
      app: oauth2-proxy
  template:
    metadata:
      labels:
        app: oauth2-proxy
    spec:
      serviceAccountName: oauth2-proxy
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
      containers:
      - name: oauth2-proxy
        image: quay.io/oauth2-proxy/oauth2-proxy:v7.4.0
        args:
        - --provider=oidc
        - --email-domain=*
        - --upstream=file:///dev/null
        - --http-address=0.0.0.0:4180
        - --oidc-issuer-url=https://orchestrix.auth0.com/
        - --skip-provider-button=true
        - --pass-access-token=true
        - --pass-authorization-header=true
        - --set-authorization-header=true
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: oauth2-secrets
              key: client-id
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth2-secrets
              key: client-secret
        - name: OAUTH2_PROXY_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: oauth2-secrets
              key: cookie-secret
        ports:
        - containerPort: 4180
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /ping
            port: 4180
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /ping
            port: 4180
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: oauth2-proxy
  namespace: orchestrix-pilot
  labels:
    app: oauth2-proxy
spec:
  type: ClusterIP
  ports:
  - port: 4180
    targetPort: 4180
    protocol: TCP
    name: http
  selector:
    app: oauth2-proxy
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: oauth2-proxy
  namespace: orchestrix-pilot
---
# Rate Limiting ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: rate-limit-config
  namespace: orchestrix-pilot
data:
  nginx.conf: |
    http {
        limit_req_zone $binary_remote_addr zone=api_limit:10m rate=100r/m;
        limit_req_zone $http_authorization zone=token_limit:10m rate=1000r/m;
        
        upstream episodic_memory {
            server episodic-memory:8081 max_fails=3 fail_timeout=30s;
        }
        
        upstream reputation_service {
            server reputation-service:8090 max_fails=3 fail_timeout=30s;
        }
        
        server {
            listen 80;
            server_name pilot-api.orchestrix.ai;
            
            # Security headers
            add_header X-Frame-Options DENY;
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
            
            # Rate limiting
            limit_req zone=api_limit burst=20 nodelay;
            limit_req zone=token_limit burst=50 nodelay;
            
            # Request size limits
            client_max_body_size 1m;
            client_body_buffer_size 128k;
            
            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Memory service
            location /api/v1/memory {
                auth_request /auth;
                proxy_pass http://episodic_memory;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                # Circuit breaker simulation
                error_page 502 503 504 /maintenance.html;
            }
            
            # Reputation service
            location /api/v1/reputation {
                auth_request /auth;
                proxy_pass http://reputation_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                
                # Circuit breaker simulation
                error_page 502 503 504 /maintenance.html;
            }
            
            # Auth endpoint
            location = /auth {
                internal;
                proxy_pass http://oauth2-proxy:4180/oauth2/auth;
                proxy_pass_request_body off;
                proxy_set_header Content-Length "";
                proxy_set_header X-Original-URI $request_uri;
            }
            
            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # Maintenance page
            location /maintenance.html {
                root /usr/share/nginx/html;
            }
        }
    }
---
# Circuit Breaker Configuration using Istio VirtualService
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: orchestrix-circuit-breaker
  namespace: orchestrix-pilot
spec:
  hosts:
  - pilot-api.orchestrix.ai
  http:
  - match:
    - uri:
        prefix: /api/v1/memory
    route:
    - destination:
        host: episodic-memory
        port:
          number: 8081
    fault:
      abort:
        percentage:
          value: 0.01  # 0.01% error injection for testing
        httpStatus: 500
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s
      retryOn: 5xx
  - match:
    - uri:
        prefix: /api/v1/reputation
    route:
    - destination:
        host: reputation-service
        port:
          number: 8090
    fault:
      abort:
        percentage:
          value: 0.01  # 0.01% error injection for testing
        httpStatus: 500
    timeout: 30s
    retries:
      attempts: 3
      perTryTimeout: 10s
      retryOn: 5xx
---
# Destination Rules for Circuit Breaking
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: episodic-memory-circuit-breaker
  namespace: orchestrix-pilot
spec:
  host: episodic-memory
  trafficPolicy:
    connectionPool:
      tcp:
        maxConnections: 10
      http:
        http1MaxPendingRequests: 10
        maxRequestsPerConnection: 10
    outlierDetection:
      consecutiveErrors: 3
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: reputation-service-circuit-breaker
  namespace: orchestrix-pilot
spec:
  host: reputation-service
  trafficPolicy:
    connectionPool:
      tcp:
        maxConnections: 10
      http:
        http1MaxPendingRequests: 10
        maxRequestsPerConnection: 10
    outlierDetection:
      consecutiveErrors: 3
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50