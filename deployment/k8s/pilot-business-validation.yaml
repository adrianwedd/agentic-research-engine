# Pilot Business Validation Framework - Phase 2 Deployment
# Classification: STRATEGIC - BUSINESS VALIDATION
# Comprehensive customer onboarding and success metrics tracking
# Last Updated: 2025-08-08

---
# Business Validation ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: business-validation-config
  namespace: orchestrix-pilot
  labels:
    component: business-validation
data:
  validation-config.yaml: |
    business_validation:
      pilot_parameters:
        duration: "6_months"
        total_pilot_users: 50
        success_criteria_evaluation: "monthly"
        expansion_decision_timeline: "month_4"
      
      kpi_targets:
        technical:
          availability_slo: 99.9
          response_time_p95_ms: 1000
          response_time_p99_ms: 2000
          error_rate_percent: 0.1
          throughput_rps: 500
          mttr_minutes: 5
        
        business:
          customer_satisfaction_score: 8.5
          task_completion_rate_percent: 95
          feature_adoption_rate_percent: 85
          user_retention_rate_percent: 92
          support_tickets_per_week: 3
          churn_rate_percent: 5
        
        financial:
          cost_per_request_usd: 0.02
          infrastructure_efficiency_percent: 85
          roi_validation_months: 3
          break_even_months: 4
      
      customer_onboarding:
        phases:
          week_1:
            users: 10
            focus: "core_platform_validation"
            success_metrics: ["basic_functionality", "user_onboarding_completion"]
          week_2:
            users: 20
            focus: "feature_completeness_testing"
            success_metrics: ["feature_discovery", "task_completion"]
          week_3:
            users: 35
            focus: "performance_validation"
            success_metrics: ["response_time_satisfaction", "system_reliability"]
          week_4:
            users: 50
            focus: "full_pilot_capacity"
            success_metrics: ["concurrent_user_handling", "system_scalability"]
      
      feedback_collection:
        channels:
          - type: "in_app_widget"
            frequency: "continuous"
            metrics: ["satisfaction_rating", "feature_requests", "bug_reports"]
          - type: "weekly_survey"
            frequency: "weekly"
            metrics: ["nps_score", "task_completion_satisfaction", "performance_rating"]
          - type: "monthly_interview"
            frequency: "monthly"
            metrics: ["in_depth_feedback", "feature_prioritization", "competitive_assessment"]
          - type: "usage_analytics"
            frequency: "real_time"
            metrics: ["feature_usage", "session_duration", "task_success_rate"]

---
# Business Metrics Collector Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: business-metrics-collector
  namespace: orchestrix-pilot
  labels:
    app: business-metrics-collector
    component: business-validation
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: business-metrics-collector
  template:
    metadata:
      labels:
        app: business-metrics-collector
        component: business-validation
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: business-metrics-collector
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
      containers:
      - name: metrics-collector
        image: agentic/business-metrics-collector:v1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8090
          name: grpc
        env:
        - name: POSTGRES_URL
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: connection-url
        - name: PROMETHEUS_URL
          value: "http://prometheus:9090"
        - name: GRAFANA_URL
          value: "http://grafana:3000"
        - name: GRAFANA_API_KEY
          valueFrom:
            secretKeyRef:
              name: grafana-secrets
              key: api-key
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LOG_LEVEL
          value: "INFO"
        - name: METRICS_COLLECTION_INTERVAL
          value: "30s"
        - name: BUSINESS_KPI_EVALUATION_INTERVAL
          value: "5m"
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: config
          mountPath: /etc/config
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: config
        configMap:
          name: business-validation-config
      - name: tmp
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - business-metrics-collector
              topologyKey: kubernetes.io/hostname

---
# Customer Success Manager Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-success-manager
  namespace: orchestrix-pilot
  labels:
    app: customer-success-manager
    component: business-validation
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: customer-success-manager
  template:
    metadata:
      labels:
        app: customer-success-manager
        component: business-validation
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      serviceAccountName: customer-success-manager
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      containers:
      - name: success-manager
        image: agentic/customer-success-manager:v1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 8091
          name: websocket
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: postgres-credentials
              key: connection-url
        - name: EMAIL_SERVICE_URL
          value: "http://email-service:8080"
        - name: SLACK_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: slack-webhook
              key: url
        - name: PILOT_USER_LIMIT
          value: "50"
        - name: ONBOARDING_AUTOMATION_ENABLED
          value: "true"
        - name: SUCCESS_INTERVENTION_THRESHOLD
          value: "0.7"  # Trigger intervention if satisfaction < 70%
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 300m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}

---
# Business Validation Services
apiVersion: v1
kind: Service
metadata:
  name: business-metrics-collector
  namespace: orchestrix-pilot
  labels:
    app: business-metrics-collector
    component: business-validation
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  - port: 8090
    targetPort: 8090
    protocol: TCP
    name: grpc
  selector:
    app: business-metrics-collector

---
apiVersion: v1
kind: Service
metadata:
  name: customer-success-manager
  namespace: orchestrix-pilot
  labels:
    app: customer-success-manager
    component: business-validation
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  - port: 8091
    targetPort: 8091
    protocol: TCP
    name: websocket
  selector:
    app: customer-success-manager

---
# Business Metrics Database Schema (PostgreSQL)
apiVersion: v1
kind: ConfigMap
metadata:
  name: business-metrics-schema
  namespace: orchestrix-pilot
  labels:
    component: database-schema
data:
  schema.sql: |
    -- Pilot Users Table
    CREATE TABLE IF NOT EXISTS pilot_users (
      id SERIAL PRIMARY KEY,
      user_id VARCHAR(255) UNIQUE NOT NULL,
      email VARCHAR(255) NOT NULL,
      onboarded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      cohort_week INTEGER NOT NULL,
      status VARCHAR(50) DEFAULT 'active',
      satisfaction_score DECIMAL(3,2),
      last_activity_at TIMESTAMP,
      churn_risk_score DECIMAL(3,2) DEFAULT 0.0,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    -- User Engagement Metrics
    CREATE TABLE IF NOT EXISTS user_engagement (
      id SERIAL PRIMARY KEY,
      user_id VARCHAR(255) REFERENCES pilot_users(user_id),
      session_id VARCHAR(255) NOT NULL,
      session_start TIMESTAMP NOT NULL,
      session_end TIMESTAMP,
      session_duration_seconds INTEGER,
      pages_visited INTEGER DEFAULT 0,
      features_used TEXT[],
      tasks_completed INTEGER DEFAULT 0,
      tasks_attempted INTEGER DEFAULT 0,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    -- Task Completion Tracking
    CREATE TABLE IF NOT EXISTS task_completions (
      id SERIAL PRIMARY KEY,
      user_id VARCHAR(255) REFERENCES pilot_users(user_id),
      task_type VARCHAR(100) NOT NULL,
      task_id VARCHAR(255),
      status VARCHAR(50) NOT NULL, -- success, failed, abandoned
      completion_time_seconds INTEGER,
      error_message TEXT,
      satisfaction_rating INTEGER CHECK (satisfaction_rating >= 1 AND satisfaction_rating <= 10),
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    -- Feature Adoption Metrics
    CREATE TABLE IF NOT EXISTS feature_adoption (
      id SERIAL PRIMARY KEY,
      user_id VARCHAR(255) REFERENCES pilot_users(user_id),
      feature_name VARCHAR(100) NOT NULL,
      first_used_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      usage_count INTEGER DEFAULT 1,
      last_used_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      proficiency_level VARCHAR(20) DEFAULT 'beginner', -- beginner, intermediate, advanced
      UNIQUE(user_id, feature_name)
    );

    -- Feedback Collection
    CREATE TABLE IF NOT EXISTS user_feedback (
      id SERIAL PRIMARY KEY,
      user_id VARCHAR(255) REFERENCES pilot_users(user_id),
      feedback_type VARCHAR(50) NOT NULL, -- survey, interview, in_app, support
      channel VARCHAR(50) NOT NULL,
      rating INTEGER CHECK (rating >= 1 AND rating <= 10),
      nps_score INTEGER CHECK (nps_score >= 0 AND nps_score <= 10),
      feedback_text TEXT,
      feature_category VARCHAR(100),
      sentiment VARCHAR(20), -- positive, neutral, negative
      priority VARCHAR(20) DEFAULT 'medium', -- low, medium, high, critical
      status VARCHAR(20) DEFAULT 'new', -- new, reviewed, addressed, closed
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    -- Business KPI Snapshots
    CREATE TABLE IF NOT EXISTS business_kpi_snapshots (
      id SERIAL PRIMARY KEY,
      snapshot_date DATE NOT NULL,
      total_active_users INTEGER,
      daily_active_users INTEGER,
      weekly_retention_rate DECIMAL(5,2),
      monthly_retention_rate DECIMAL(5,2),
      average_satisfaction_score DECIMAL(3,2),
      nps_score DECIMAL(3,2),
      task_completion_rate DECIMAL(5,2),
      feature_adoption_rate DECIMAL(5,2),
      support_ticket_count INTEGER,
      churn_rate DECIMAL(5,2),
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      UNIQUE(snapshot_date)
    );

    -- Technical KPI Snapshots
    CREATE TABLE IF NOT EXISTS technical_kpi_snapshots (
      id SERIAL PRIMARY KEY,
      snapshot_timestamp TIMESTAMP NOT NULL,
      availability_percent DECIMAL(5,2),
      response_time_p50_ms DECIMAL(10,2),
      response_time_p95_ms DECIMAL(10,2),
      response_time_p99_ms DECIMAL(10,2),
      error_rate_percent DECIMAL(5,4),
      throughput_rps DECIMAL(10,2),
      concurrent_users INTEGER,
      mttr_minutes DECIMAL(8,2),
      cost_per_request_usd DECIMAL(10,6),
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    -- Success Interventions Log
    CREATE TABLE IF NOT EXISTS success_interventions (
      id SERIAL PRIMARY KEY,
      user_id VARCHAR(255) REFERENCES pilot_users(user_id),
      intervention_type VARCHAR(50) NOT NULL, -- automated_guidance, human_outreach, training_recommended
      trigger_reason VARCHAR(200) NOT NULL,
      intervention_details TEXT,
      status VARCHAR(20) DEFAULT 'initiated', -- initiated, in_progress, completed, failed
      outcome VARCHAR(200),
      satisfaction_improvement DECIMAL(3,2),
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      completed_at TIMESTAMP
    );

    -- Pilot Success Criteria Tracking
    CREATE TABLE IF NOT EXISTS success_criteria_evaluations (
      id SERIAL PRIMARY KEY,
      evaluation_date DATE NOT NULL,
      criteria_category VARCHAR(50) NOT NULL, -- technical, business, operational
      criteria_name VARCHAR(100) NOT NULL,
      target_value DECIMAL(10,4),
      actual_value DECIMAL(10,4),
      performance_percent DECIMAL(5,2),
      status VARCHAR(20) NOT NULL, -- meeting, exceeding, below_target
      trend VARCHAR(20), -- improving, stable, declining
      notes TEXT,
      created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
      UNIQUE(evaluation_date, criteria_category, criteria_name)
    );

    -- Indexes for Performance
    CREATE INDEX IF NOT EXISTS idx_pilot_users_status ON pilot_users(status);
    CREATE INDEX IF NOT EXISTS idx_pilot_users_cohort ON pilot_users(cohort_week);
    CREATE INDEX IF NOT EXISTS idx_user_engagement_user_id ON user_engagement(user_id);
    CREATE INDEX IF NOT EXISTS idx_user_engagement_session_start ON user_engagement(session_start);
    CREATE INDEX IF NOT EXISTS idx_task_completions_user_id ON task_completions(user_id);
    CREATE INDEX IF NOT EXISTS idx_task_completions_created_at ON task_completions(created_at);
    CREATE INDEX IF NOT EXISTS idx_user_feedback_user_id ON user_feedback(user_id);
    CREATE INDEX IF NOT EXISTS idx_user_feedback_type ON user_feedback(feedback_type);
    CREATE INDEX IF NOT EXISTS idx_business_kpi_snapshots_date ON business_kpi_snapshots(snapshot_date);
    CREATE INDEX IF NOT EXISTS idx_technical_kpi_snapshots_timestamp ON technical_kpi_snapshots(snapshot_timestamp);

---
# Business KPI Recording Rules
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: business-kpi-rules
  namespace: orchestrix-pilot
  labels:
    prometheus: orchestrix-pilot
    role: business-kpi-rules
spec:
  groups:
  - name: business.kpis
    interval: 60s
    rules:
    # Customer Satisfaction Metrics
    - record: business:customer_satisfaction:average
      expr: avg(customer_satisfaction_score)
    
    - record: business:nps_score:average  
      expr: avg(nps_score)
    
    # User Engagement Metrics
    - record: business:daily_active_users:count
      expr: count(increase(user_session_total[24h]) > 0)
    
    - record: business:session_duration:p95
      expr: histogram_quantile(0.95, sum(rate(user_session_duration_seconds_bucket[5m])) by (le))
    
    # Task Completion Metrics
    - record: business:task_completion_rate:5m
      expr: |
        sum(rate(task_completion_total{status="success"}[5m])) /
        sum(rate(task_completion_total[5m])) * 100
    
    - record: business:task_completion_rate:1h
      expr: |
        sum(rate(task_completion_total{status="success"}[1h])) /
        sum(rate(task_completion_total[1h])) * 100
    
    # Feature Adoption Metrics
    - record: business:feature_adoption_rate:daily
      expr: |
        count(increase(feature_usage_total[24h]) > 0) by (feature_name) /
        count(pilot_users_active_total) * 100
    
    # Retention Metrics
    - record: business:user_retention_rate:7d
      expr: |
        count(increase(user_session_total[7d]) > 0) /
        count(pilot_users_total) * 100
    
    - record: business:user_retention_rate:30d
      expr: |
        count(increase(user_session_total[30d]) > 0) /
        count(pilot_users_total) * 100
    
    # Support and Churn Metrics
    - record: business:support_tickets:weekly_rate
      expr: increase(support_tickets_total[7d])
    
    - record: business:churn_rate:monthly
      expr: |
        count(pilot_users_churned_total) /
        count(pilot_users_total) * 100

---
# Business Validation Alerts
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: business-validation-alerts
  namespace: orchestrix-pilot
  labels:
    prometheus: orchestrix-pilot
    role: business-alerts
spec:
  groups:
  - name: business.alerts
    rules:
    # Customer Satisfaction Alerts
    - alert: CustomerSatisfactionBelowTarget
      expr: business:customer_satisfaction:average < 8.5
      for: 10m
      labels:
        severity: warning
        category: business
        kpi_type: customer_satisfaction
      annotations:
        summary: "Customer satisfaction below target"
        description: "Average customer satisfaction is {{ $value }}, below target of 8.5"
        runbook_url: "https://runbooks.orchestrix.ai/business/customer-satisfaction"
    
    - alert: NPSScoreBelowTarget
      expr: business:nps_score:average < 7.0
      for: 15m
      labels:
        severity: warning
        category: business
        kpi_type: nps
      annotations:
        summary: "NPS score below acceptable threshold"
        description: "Average NPS score is {{ $value }}, below acceptable threshold of 7.0"
    
    # Task Completion Alerts
    - alert: TaskCompletionRateBelowTarget
      expr: business:task_completion_rate:1h < 95
      for: 30m
      labels:
        severity: warning
        category: business
        kpi_type: task_completion
      annotations:
        summary: "Task completion rate below target"
        description: "Task completion rate is {{ $value }}%, below target of 95%"
        runbook_url: "https://runbooks.orchestrix.ai/business/task-completion"
    
    # User Engagement Alerts
    - alert: DailyActiveUsersDropping
      expr: rate(business:daily_active_users:count[24h]) < -0.1
      for: 2h
      labels:
        severity: warning
        category: business
        kpi_type: engagement
      annotations:
        summary: "Daily active users declining"
        description: "Daily active users dropping by {{ $value | humanizePercentage }} over 24h"
    
    # Retention Alerts
    - alert: UserRetentionBelowTarget
      expr: business:user_retention_rate:7d < 92
      for: 1h
      labels:
        severity: critical
        category: business
        kpi_type: retention
      annotations:
        summary: "Weekly user retention below target"
        description: "7-day user retention is {{ $value }}%, below target of 92%"
        runbook_url: "https://runbooks.orchestrix.ai/business/user-retention"
    
    # Support Volume Alerts
    - alert: SupportTicketVolumeHigh
      expr: business:support_tickets:weekly_rate > 15  # 3 tickets/week * 5 users average
      for: 30m
      labels:
        severity: warning
        category: operational
        kpi_type: support
      annotations:
        summary: "Support ticket volume exceeding threshold"
        description: "Weekly support tickets: {{ $value }}, above threshold of 15"
    
    # Churn Rate Alerts
    - alert: ChurnRateAboveTarget
      expr: business:churn_rate:monthly > 5
      for: 1h
      labels:
        severity: critical
        category: business
        kpi_type: churn
      annotations:
        summary: "Monthly churn rate above acceptable threshold"
        description: "Monthly churn rate is {{ $value }}%, above target of 5%"
        runbook_url: "https://runbooks.orchestrix.ai/business/churn-prevention"

---
# Service Accounts and RBAC
apiVersion: v1
kind: ServiceAccount
metadata:
  name: business-metrics-collector
  namespace: orchestrix-pilot
  labels:
    component: business-validation

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: customer-success-manager
  namespace: orchestrix-pilot
  labels:
    component: business-validation

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: orchestrix-pilot
  name: business-validation
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets", "services"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: business-validation-binding
  namespace: orchestrix-pilot
subjects:
- kind: ServiceAccount
  name: business-metrics-collector
  namespace: orchestrix-pilot
- kind: ServiceAccount
  name: customer-success-manager
  namespace: orchestrix-pilot
roleRef:
  kind: Role
  name: business-validation
  apiGroup: rbac.authorization.k8s.io

---
# Grafana Dashboard for Business Metrics
apiVersion: v1
kind: ConfigMap
metadata:
  name: business-validation-dashboard
  namespace: orchestrix-pilot
  labels:
    grafana_dashboard: "1"
    component: business-validation
data:
  business-kpis.json: |
    {
      "dashboard": {
        "id": null,
        "title": "Business Validation KPIs - Pilot Phase 2",
        "tags": ["business", "pilot", "validation", "kpis"],
        "timezone": "browser",
        "panels": [
          {
            "id": 1,
            "title": "Pilot User Onboarding Progress",
            "type": "stat",
            "targets": [
              {
                "expr": "pilot_users_total",
                "legendFormat": "Total Users"
              },
              {
                "expr": "pilot_users_active_total",
                "legendFormat": "Active Users"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "short",
                "min": 0,
                "max": 50,
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": 0},
                    {"color": "yellow", "value": 25},
                    {"color": "green", "value": 40}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 8, "x": 0, "y": 0}
          },
          {
            "id": 2,
            "title": "Customer Satisfaction Score",
            "type": "stat",
            "targets": [
              {
                "expr": "business:customer_satisfaction:average",
                "legendFormat": "Avg Satisfaction"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "short",
                "min": 0,
                "max": 10,
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": 0},
                    {"color": "yellow", "value": 7},
                    {"color": "green", "value": 8.5}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 8, "x": 8, "y": 0}
          },
          {
            "id": 3,
            "title": "Task Completion Rate",
            "type": "stat",
            "targets": [
              {
                "expr": "business:task_completion_rate:1h",
                "legendFormat": "Completion Rate %"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "percent",
                "min": 0,
                "max": 100,
                "thresholds": {
                  "steps": [
                    {"color": "red", "value": 0},
                    {"color": "yellow", "value": 90},
                    {"color": "green", "value": 95}
                  ]
                }
              }
            },
            "gridPos": {"h": 8, "w": 8, "x": 16, "y": 0}
          },
          {
            "id": 4,
            "title": "User Retention Trends",
            "type": "timeseries",
            "targets": [
              {
                "expr": "business:user_retention_rate:7d",
                "legendFormat": "7-day Retention"
              },
              {
                "expr": "business:user_retention_rate:30d",
                "legendFormat": "30-day Retention"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "unit": "percent",
                "custom": {
                  "drawStyle": "line",
                  "lineInterpolation": "linear",
                  "lineWidth": 2
                }
              }
            },
            "gridPos": {"h": 8, "w": 12, "x": 0, "y": 8}
          },
          {
            "id": 5,
            "title": "Feature Adoption Heatmap",
            "type": "heatmap",
            "targets": [
              {
                "expr": "business:feature_adoption_rate:daily",
                "legendFormat": "{{ feature_name }}"
              }
            ],
            "gridPos": {"h": 8, "w": 12, "x": 12, "y": 8}
          }
        ],
        "time": {"from": "now-7d", "to": "now"},
        "refresh": "1m"
      }
    }