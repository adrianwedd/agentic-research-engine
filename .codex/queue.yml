- id: CR-P2-01A
  title: Harden LTM Service API with Forgetting Endpoint
  priority: high
  steps: []
  acceptance_criteria:
    - forgetting route deletes a record
    - invalid bodies return 422

- id: P3-15
  title: Integrate graph database for Semantic LTM
  priority: high
  steps:
    - connect LTM service to Neo4j
  acceptance_criteria:
    - semantic facts stored as nodes with relationships

- id: P3-16
  title: Enhance MemoryManager to extract entities for knowledge graph
  priority: high
  steps: []
  acceptance_criteria:
    - Given a verified report containing a relationship statement
    - When the MemoryManager processes the report
    - Then the corresponding nodes and relationship are stored in Semantic LTM

- id: CR-P3-16A
  title: Improve MemoryManager Relation Extraction
  priority: high
  steps: []
  acceptance_criteria:
    - Given the MemoryManager processes complex text
    - When relation extraction completes
    - Then multiple distinct triples are returned

- id: P3-19
  title: Implement a GitHub Search API tool
  priority: medium
  steps: []
  acceptance_criteria:
    - Given a query for a specific open-source library
    - When the GitHub Search tool is called with the query
    - Then it returns a list of relevant repository URLs and descriptions

- id: CR-DEV-01
  title: Implement Pluggable LLM Client for Local and Cloud Model Support
  priority: medium
  steps: []
  acceptance_criteria:
    - Given LLM_PROVIDER="ollama" the client sends requests to the local server
    - Given LLM_PROVIDER="openai_compatible" the client sends requests to the configured cloud endpoint
    - Changing environment variables switches models without code changes

- id: CR-BUG-02
  title: Fix PyTorch Dependency Resolution in requirements.txt
  priority: high
  steps: []
  acceptance_criteria:
    - pip-audit -r requirements.txt exits with code 0
    - pip install -r requirements.txt installs torch 2.2.2 CPU build
- id: CR-P3-03A
  title: Fix State Propagation from Hierarchical Subgraphs to Parent
  priority: high
  steps: []
  acceptance_criteria:
    - Subgraph final state merges into parent scratchpad
    - Parent graph resumes after subgraph completion
- id: CR-ADR-003-IMPL
  title: Enforce LLM-Grounded Communication Paradigm in Training Pipeline
  priority: high
  steps:
    - make guidance_loss mandatory in trainers
    - remove deprecated emergent protocols
    - add CI check for guidance_loss in configs
  acceptance_criteria:
    - trainer raises ConfigurationError if guidance_loss missing
    - CI fails for configs without guidance_loss
    - deprecated emergent files removed
- id: CR-001
  title: SkillLibrary-based MemoryManager overhaul
  priority: medium
  steps: []
  acceptance_criteria:
    - MemoryManager stores skills with policy, embedding and metadata

- id: CR-002
  title: Unsupervised SkillDiscoveryModule
  priority: medium
  steps: []
  acceptance_criteria:
    - URL discovers disentangled skills for the SkillLibrary

- id: CR-003
  title: LLM-guided semantic skill decomposition
  priority: medium
  steps: []
  acceptance_criteria:
    - LLM-generated sub-tasks and rewards stored in skill metadata

- id: CR-004
  title: Hierarchical Policy Executor
  priority: medium
  steps: []
  acceptance_criteria:
    - Manager selects goals and Worker executes skills via HRL

- id: CR-005
  title: Lifelong skill generalization support
  priority: medium
  steps: []
  acceptance_criteria:
    - New skills added without overwriting existing ones

- id: CR-006
  title: Adopt RLlib and Isaac Lab tooling
  priority: medium
  steps: []
  acceptance_criteria:
    - RL training uses Ray RLlib and NVIDIA Isaac Lab

- id: CR-02
  title: Detailed Implementation of the LLM-Based Auxiliary Guidance Loss
  priority: high
  steps: []
  acceptance_criteria:
    - dataset generation pipeline outputs at least 1000 mappings
    - training logs show policy_loss and guidance_loss at each step
