- acceptance_criteria:
  - forgetting route deletes a record
  - invalid bodies return 422
  id: CR-P2-01A
  priority: high
  steps: []
  title: Harden LTM Service API with Forgetting Endpoint
- acceptance_criteria:
  - FastAPI service stores evaluations in PostgreSQL
  - Reputation scores aggregate by task type
  id: CR-01
  priority: high
  steps: []
  title: New Component - Reputation Service & Persistent Data Store
- acceptance_criteria:
  - semantic facts stored as nodes with relationships
  id: P3-15
  priority: high
  steps:
  - connect LTM service to Neo4j
  title: Integrate graph database for Semantic LTM
- acceptance_criteria:
  - Given a verified report containing a relationship statement
  - When the MemoryManager processes the report
  - Then the corresponding nodes and relationship are stored in Semantic LTM
  id: P3-16
  priority: high
  steps: []
  title: Enhance MemoryManager to extract entities for knowledge graph
- acceptance_criteria:
  - Given the MemoryManager processes complex text
  - When relation extraction completes
  - Then multiple distinct triples are returned
  id: CR-P3-16A
  priority: high
  steps: []
  title: Improve MemoryManager Relation Extraction
- acceptance_criteria:
  - Given a query for a specific open-source library
  - When the GitHub Search tool is called with the query
  - Then it returns a list of relevant repository URLs and descriptions
  id: P3-19
  priority: medium
  steps: []
  title: Implement a GitHub Search API tool
- acceptance_criteria:
  - Given LLM_PROVIDER="ollama" the client sends requests to the local server
  - Given LLM_PROVIDER="openai_compatible" the client sends requests to the configured
    cloud endpoint
  - Changing environment variables switches models without code changes
  id: CR-DEV-01
  priority: medium
  steps: []
  title: Implement Pluggable LLM Client for Local and Cloud Model Support
- acceptance_criteria:
  - pip-audit -r requirements.txt exits with code 0
  - pip install -r requirements.txt installs torch 2.2.2 CPU build
  id: CR-BUG-02
  priority: high
  steps: []
  title: Fix PyTorch Dependency Resolution in requirements.txt
- acceptance_criteria:
  - Subgraph final state merges into parent scratchpad
  - Parent graph resumes after subgraph completion
  id: CR-P3-03A
  priority: high
  steps: []
  title: Fix State Propagation from Hierarchical Subgraphs to Parent
- acceptance_criteria:
  - trainer raises ConfigurationError if guidance_loss missing
  - CI fails for configs without guidance_loss
  - deprecated emergent files removed
  id: CR-ADR-003-IMPL
  priority: high
  steps:
  - make guidance_loss mandatory in trainers
  - remove deprecated emergent protocols
  - add CI check for guidance_loss in configs
  title: Enforce LLM-Grounded Communication Paradigm in Training Pipeline
- acceptance_criteria:
  - MemoryManager stores skills with policy, embedding and metadata
  id: CR-001
  priority: medium
  steps: []
  title: SkillLibrary-based MemoryManager overhaul
- acceptance_criteria:
  - URL discovers disentangled skills for the SkillLibrary
  id: CR-002
  priority: medium
  steps: []
  title: Unsupervised SkillDiscoveryModule
- acceptance_criteria:
  - LLM-generated sub-tasks and rewards stored in skill metadata
  id: CR-003
  priority: medium
  steps: []
  title: LLM-guided semantic skill decomposition
- acceptance_criteria:
  - Manager selects goals and Worker executes skills via HRL
  id: CR-004
  priority: medium
  steps: []
  title: Hierarchical Policy Executor
- acceptance_criteria:
  - New skills added without overwriting existing ones
  id: CR-005
  priority: medium
  steps: []
  title: Lifelong skill generalization support
- acceptance_criteria:
  - RL training uses Ray RLlib and NVIDIA Isaac Lab
  id: CR-006
  priority: medium
  steps: []
  title: Adopt RLlib and Isaac Lab tooling
- acceptance_criteria:
  - dataset generation pipeline outputs at least 1000 mappings
  - training logs show policy_loss and guidance_loss at each step
  id: CR-02
  priority: high
  steps: []
  title: Detailed Implementation of the LLM-Based Auxiliary Guidance Loss
- acceptance_criteria:
  - Given two agents from separate runs
  - When the evaluation pipeline runs
  - Then the report includes ZSC, CIC, and Interpretability scores
  id: CR-03
  priority: medium
  steps: []
  title: Enhancement of the Evaluation Framework to Include ZSC, CIC, and Interpretability
    Metrics
- acceptance_criteria:
  - Unauthorized network calls are blocked and log SandboxNetworkBlocked
  id: CR-05a
  priority: high
  steps:
  - containerize agents with gVisor or Firecracker
  - deny all network egress by default
  - manage sandbox specs via IaC
  title: Enforce Agent Sandboxing
- acceptance_criteria:
  - Gap analysis report produced
  - Task lifecycle documented with pain points
  - AGENTS.md and codex_tasks logic updated
  id: CR-AI-16
  priority: medium
  steps: []
  title: Analyse & Enhance Codex Agent Experience
- acceptance_criteria:
  - Given an agent issues any tool call
  - When the call completes or is blocked
  - Then a log entry is emitted with timestamp, agent_id, action, intent, and outcome
  id: CR-05c
  priority: medium
  steps: []
  title: Enable Continuous Monitoring & Auditing
- acceptance_criteria:
  - All @pytest.mark.core tests (including sandbox) pass under the parallel runner.
  - optional and integration tests continue to pass in their respective CI jobs.
  id: CR-05b-04
  priority: low
  steps:
  - Rerun `test_sandbox.py` under the new core suite to confirm sandbox isolation
    and timeouts still work.
  - Execute the 'optional' and 'integration' markers locally and in CI to catch any
    regressions in slow or optional tests.
  - Fix any failures (e.g. missing fixtures, new dependency issues, or timeouts).
  title: Verify sandbox and optional-suite stability post-migration
- acceptance_criteria:
  - Evaluator publishes EvaluationCompletedEvent
  - Reputation Service updates scores on event
  id: CR-03B
  priority: medium
  steps: []
  title: System Integration - Event-Driven Reputation Feedback Loop
- acceptance_criteria:
  - Planner queries the reputation API before assigning tasks
  - Weighted sum considers reputation score, token cost and load
  id: CR-04
  priority: medium
  steps:
  - integrate Planner with Reputation Service via GET /v1/reputation/query
  - compute weighted utility using reputation, cost, and current load
  - allocate tasks to maximize utility
  title: Agent Modification - Planner Agent Enhancement
- acceptance_criteria:
  - Given a recalled plan template exists
  - When a similar query is submitted
  - Then the resulting plan has fewer nodes than the baseline
  id: P3-TEST-01
  notes: '`services/tool_registry/__init__.py` uses `datetime.utcnow()` which is deprecated
    in Python 3.12. Replace with `datetime.now(datetime.UTC)` to ensure timezone-aware
    timestamps.'
  priority: medium
  status: open
  steps:
  - Investigate Supervisor merging logic
  - Add regression test for plan length reduction
  title: Replace deprecated utcnow usage
- acceptance_criteria:
  - Edges and nodes styled based on agent-provided confidence scores
  - Agent's primary intended plan visually distinct
  - Selecting a belief node reveals the evidence chain
  id: CR-1.2
  priority: medium
  steps: []
  title: Uncertainty & Intent Display
- acceptance_criteria:
  - something done
  id: CODEX-EXAMPLE-01
  priority: low
  steps:
  - do something
  title: Example task
- acceptance_criteria:
  - docs/change-requests.md aggregates suggestions by topic
  - codex_tasks.md references this issue
  id: CODEX-CR-COLLECT-02
  issue: TBD
  priority: low
  steps: []
  title: Consolidate scattered change-request suggestions
- acceptance_criteria:
  - Overlapping entries are consolidated in codex_tasks.md
  - docs/change-requests.md notes consolidation date
  - Issue link is recorded here
  id: CODEX-CR-RATIONALISE-03
  issue: TBD
  priority: low
  steps: []
  title: Rationalise overlap between change_requests.md and codex_tasks.md
- acceptance_criteria:
  - A "What-If" mode can be toggled on, creating a non-destructive simulation environment.
  - Within this mode, operators can modify plan parameters and trigger a re-simulation.
  - The UI displays the original and simulated plans side-by-side with updated KPIs.
  - Simulation logs are kept separate from the primary execution logs.
  id: CR-1.3
  priority: medium
  steps: []
  title: What-If Simulation Mode
- acceptance_criteria:
  - docs/integration_audit.md summarizes workflows, tests, schemas and performance
  - CI shows coverage >= 95%
  - Follow-up CRs listed for partial or missing flows
  id: CR-P4-07
  priority: high
  steps:
  - Inventory all workflows
  - Document E2E tests and coverage
  - Validate schemas and benchmark pipelines
  - Record gaps and follow-up CRs
  title: End-to-End Integration & Pipeline Audit
- acceptance_criteria:
  - Neo4j consolidation endpoint stores triples
  id: CR-P4-07A2
  priority: high
  steps: []
  title: Add Neo4j consolidation for semantic memory
