name: Minimal Automation

on:
  pull_request:
  workflow_dispatch:

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      core: ${{ steps.filter.outputs.core }}
      judge: ${{ steps.filter.outputs.judge }}
      python: ${{ steps.filter.outputs.python }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            core:
              - 'core/**'
            judge:
              - 'pipelines/judge/**'
              - 'data/golden_judge_dataset/**'
            python:
              - '**/*.py'
              - '**/requirements.txt'

  build:
    needs: changes
    if: |
      needs.changes.outputs.core == 'true' ||
      needs.changes.outputs.judge == 'true' ||
      needs.changes.outputs.python == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      GITHUB_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements.txt
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Install dependencies
        run: |
          bash scripts/agent-setup.sh

      - name: Run linters and formatters
        run: pre-commit run --all-files
      - name: Check Markdown links
        run: python scripts/link_check.py

      - name: Run tests
        run: pytest --cov=./ --cov-report=xml --cov-report=html --cov-fail-under=80 -v
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
      - name: Upload coverage html
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: htmlcov/
