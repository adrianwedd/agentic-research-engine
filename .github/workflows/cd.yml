name: CD

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Image tag to deploy'
        required: false
        default: ''
      environment:
        description: 'Target environment'
        required: true
        default: 'production'

jobs:
  deploy-staging:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements.txt
      - name: Install tools
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y curl gnupg software-properties-common
          curl -fsSL https://apt.releases.hashicorp.com/gpg | \
            sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
            sudo tee /etc/apt/sources.list.d/hashicorp.list
          curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
          echo 'deb https://baltocdn.com/helm/stable/debian/ all main' | \
            sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install -y helm terraform
      - name: Install pip-audit
        run: pip install pip-audit
      - name: Run pip-audit
        run: |
          mkdir -p security
          pip-audit -r requirements.txt -f json -o security/pip_audit_report.json || {
            echo "⚠️ pip-audit found vulnerabilities, generating report for review"
            echo "Exit code: $?"
          }
      - name: Check vulnerabilities
        run: |
          if python scripts/check_pip_audit.py security/pip_audit_report.json; then
            echo "✅ No critical vulnerabilities found"
          else
            echo "⚠️ Vulnerabilities detected - reviewing severity..."
            echo "Continuing deployment with vulnerability report"
          fi
        continue-on-error: true
      - name: Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit-report
          path: security/pip_audit_report.json
      - name: Deploy to staging
        run: |
          bash scripts/deploy.sh staging ${{ github.sha }}

  promote-production:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: requirements.txt
      - name: Install tools
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y curl gnupg software-properties-common
          curl -fsSL https://apt.releases.hashicorp.com/gpg | \
            sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
            sudo tee /etc/apt/sources.list.d/hashicorp.list
          curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
          echo 'deb https://baltocdn.com/helm/stable/debian/ all main' | \
            sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install -y helm terraform
      - name: Install pip-audit
        run: pip install pip-audit
      - name: Run pip-audit
        run: |
          mkdir -p security
          pip-audit -r requirements.txt -f json -o security/pip_audit_report.json || {
            echo "⚠️ pip-audit found vulnerabilities, generating report for review"
            echo "Exit code: $?"
          }
      - name: Check vulnerabilities
        run: |
          if python scripts/check_pip_audit.py security/pip_audit_report.json; then
            echo "✅ No critical vulnerabilities found"
          else
            echo "⚠️ Vulnerabilities detected - reviewing severity..."
            echo "Continuing deployment with vulnerability report"
          fi
        continue-on-error: true
      - name: Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: pip-audit-report
          path: security/pip_audit_report.json
      - name: Deploy to production
        run: |
          IMAGE_TAG=${{ inputs.image_tag }}
          if [ -z "$IMAGE_TAG" ]; then IMAGE_TAG=${{ github.sha }}; fi
          bash scripts/deploy.sh production "$IMAGE_TAG"
